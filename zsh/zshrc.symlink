# ~/.zshrc

# Check if .zshenv ran correctly
if [[ -z "$ZSHENV_LOADED" ]]; then
  echo "⚠️  Warning: .zshenv was not sourced. Some variables may be missing."
fi

# Load core functions and configurations
[[ -f "${HOME}/.zsh/env/core/functions.zsh" ]] && source "${HOME}/.zsh/env/core/functions.zsh" || echo "Warning: Core functions not found"
load_env_dir "${HOME}/.zsh/env/core"

# Load platform-specific configurations
if [[ $IS_MACOS -eq 1 ]]; then
    load_env_file "$HOME/.zsh/env/platform/macos.zsh"
elif [[ $IS_LINUX -eq 1 ]]; then
    load_env_file "$HOME/.zsh/env/platform/linux.zsh"
fi

# Load optional configurations last
load_env_file "${HOME}/.zsh/env/optional/private.zsh"

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
ZSH_THEME="" # using starship

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

if [[ $IS_MACOS -eq 1 ]]; then
  zstyle :omz:plugins:ssh-agent ssh-add-args --apple-load-keychain
fi

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
	ssh-agent
	aws
	dotenv
	vscode
	git-open
	gitignore
  zsh-defer
  zsh-autosuggestions
  zsh-syntax-highlighting
  you-should-use
  fzf-tab
)

mac_plugins=(
  brew
  macos
  iterm2
)

if [[ $IS_MACOS -eq 1 ]]; then
  plugins+=("${mac_plugins[@]}")
fi

zstyle :omz:plugins:ssh-agent lazy yes
zstyle :omz:plugins:ssh-agent quiet yes

[[ -f $ZSH/oh-my-zsh.sh ]] && source $ZSH/oh-my-zsh.sh || echo "Warning: oh-my-zsh not found"

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
export EDITOR='nvim'

#export RPROMPT='${virtualenv_info}'

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# -----------------------------
# COMPLETIONS
# -----------------------------
# Initialize completion system

# Add completion paths
fpath=(
    "$(brew --prefix)/share/zsh/site-functions"
    "${ASDF_DATA_DIR:-$HOME/.asdf}/completions"
    "${HOME}/dotfiles/zsh/functions"
    "${HOME}/.zfunc"
    "${fpath[@]}"
)

# Completion styling
zstyle ':completion:*' menu select

autoload -Uz compinit && compinit

# Enable bash completion compatibility
autoload -U +X bashcompinit && bashcompinit

# Package manager completions
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . "${HOME}/.config/tabtab/zsh/__tabtab.zsh" || true

# Cloud tool completions
# Check multiple potential locations for Google Cloud SDK
for gcloud_path in "$HOME/tools/google-cloud-sdk" "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk" "/opt/google-cloud-sdk"; do
  if [[ -d "$gcloud_path" ]]; then
    [[ -f "$gcloud_path/completion.zsh.inc" ]] && source "$gcloud_path/completion.zsh.inc"
    [[ -f "$gcloud_path/path.zsh.inc" ]] && source "$gcloud_path/path.zsh.inc"
    break
  fi
done


# Command line tool completions
command -v uv >/dev/null && eval "$(uv --generate-shell-completion zsh)"
command -v uvx >/dev/null && eval "$(uvx --generate-shell-completion zsh)"

_uv_run_mod() {
    if [[ "$words[2]" == "run" && "$words[CURRENT]" != -* ]]; then
        _arguments '*:filename:_files'
    else
        _uv "$@"
    fi
}
compdef _uv_run_mod uv


### functions

autoload -Uz ssh-info
autoload -Uz ssh-test
autoload -Uz ssh-switch
autoload -Uz ssh-git-id
autoload -Uz recent-ssh-keys
autoload -Uz ssh-autoload
autoload -Uz listening
autoload -Uz h
autoload -Uz mdview
autoload -Uz kitty-themes-fzf
autoload -Uz add-zsh-hook
autoload -Uz terraform
autoload -Uz aws
autoload -Uz direnv
add-zsh-hook precmd update_kitty_tab_title

source "${HOME}/dotfiles/zsh/functions/completions.zsh"

# 1Password
[[ -f "$HOME/.config/op/plugins.sh" ]] && source "$HOME/.config/op/plugins.sh"

# For direnv (independent of starship)
zsh-defer eval "$(direnv hook zsh)"
zsh-defer eval "$(zoxide init --cmd cd zsh)"
zsh-defer eval "$(fzf --zsh)"

# Load starship prompt if available
command -v starship >/dev/null && eval "$(starship init zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
export FZF_DEFAULT_OPTS="--height 50% --layout=default --border --color=hl:#2dd4bf"
# Only load preview when actually triggered, not at startup
export FZF_CTRL_T_OPTS="--preview 'bat --color=always -n --line-range :5000 {}'"
